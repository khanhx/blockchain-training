/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Lottery, LotteryInterface } from "../Lottery";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_taxPercent",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FeeDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "GameCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "winNumber",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "winners",
        type: "address[]",
      },
    ],
    name: "GameSettled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "guess",
        type: "bytes32",
      },
    ],
    name: "GuessMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PrizeDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "guess",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "originNumber",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "ProofSubmitted",
    type: "event",
  },
  {
    inputs: [],
    name: "CYCLE_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "games",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isSettled",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "winNumber",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cycleId",
        type: "uint256",
      },
    ],
    name: "getCycleEndTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_guess",
        type: "bytes32",
      },
    ],
    name: "guess",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "guestAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cycleId",
        type: "uint256",
      },
    ],
    name: "isValidCycle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastCycleStart",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeAddress",
        type: "address",
      },
    ],
    name: "setFeeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setGuestAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_taxPercent",
        type: "uint256",
      },
    ],
    name: "setTaxPercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gameId",
        type: "uint256",
      },
    ],
    name: "settleGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gameId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_guess",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "_originNumber",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
    ],
    name: "submitProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "taxPercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052662386f26fc1000060025534801561001b57600080fd5b5060405161116238038061116283398101604081905261003a916101c7565b60038054610100600160a81b03191633610100021790554260015561005e8261006e565b61006781610136565b5050610201565b60035461010090046001600160a01b031633146100be5760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b60448201526064015b60405180910390fd5b6001600160a01b0381166101145760405162461bcd60e51b815260206004820152601360248201527f496e76616c69642066656520616464726573730000000000000000000000000060448201526064016100b5565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b60035461010090046001600160a01b031633146101815760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b60448201526064016100b5565b6127108111156101c25760405162461bcd60e51b815260206004820152600c60248201526b0a8c2f040e8dede40d0d2ced60a31b60448201526064016100b5565b600555565b600080604083850312156101da57600080fd5b82516001600160a01b03811681146101f157600080fd5b6020939093015192949293505050565b610f52806102106000396000f3fe6080604052600436106100f35760003560e01c80638705fcd41161008a578063b64fcb2711610059578063b64fcb27146102e2578063baafcdf414610302578063be26ed7f14610332578063e4aa533e1461034757600080fd5b80638705fcd4146102675780638cc1ed62146102875780638da5cb5b1461029d5780638de616d8146102c257600080fd5b80635b66028a116100c65780635b66028a146101fb5780635f058b251461021157806361178386146102315780637541f41c1461025157600080fd5b8063113bc999146100f8578063117a5b9014610121578063312d7bbc146101a157806341275358146101c3575b600080fd5b34801561010457600080fd5b5061010e61038481565b6040519081526020015b60405180910390f35b34801561012d57600080fd5b5061017161013c366004610d85565b60006020819052908152604090208054600182015460048301546005840154600690940154929360ff92831693929091169185565b60408051958652931515602086015260ff909216928401929092526060830191909152608082015260a001610118565b3480156101ad57600080fd5b506101c16101bc366004610d85565b61035a565b005b3480156101cf57600080fd5b506004546101e3906001600160a01b031681565b6040516001600160a01b039091168152602001610118565b34801561020757600080fd5b5061010e60015481565b34801561021d57600080fd5b5061010e61022c366004610d85565b6107fc565b34801561023d57600080fd5b506101c161024c366004610d85565b610829565b34801561025d57600080fd5b5061010e60055481565b34801561027357600080fd5b506101c1610282366004610d9e565b61089e565b34801561029357600080fd5b5061010e60025481565b3480156102a957600080fd5b506003546101e39061010090046001600160a01b031681565b3480156102ce57600080fd5b506101c16102dd366004610dce565b61093b565b3480156102ee57600080fd5b506101c16102fd366004610d85565b610b79565b34801561030e57600080fd5b5061032261031d366004610d85565b610bad565b6040519015158152602001610118565b34801561033e57600080fd5b5061010e610bc0565b6101c1610355366004610d85565b610be2565b60035460ff16156103a35760405162461bcd60e51b815260206004820152600e60248201526d1499595b9d1c985b9d0818d85b1b60921b60448201526064015b60405180910390fd5b6003805460ff1916600190811790915560008281526020819052604090209081015460ff16156104155760405162461bcd60e51b815260206004820152601760248201527f47616d6520697320616c726561647920736574746c6564000000000000000000604482015260640161039a565b61041d610bc0565b610428836002610e29565b11156104695760405162461bcd60e51b815260206004820152601060248201526f23b0b6b29034b9903737ba1037bb32b960811b604482015260640161039a565b6000196000805b60ff81811610156104d45760ff81166000908152600385016020526040902054156104cc5760ff811660009081526003850160205260409020548311156104cc5760ff8116600090815260038501602052604090205492509050805b600101610470565b5060048301805460ff831660ff19918216179091556001808501805490921617905582546005546000906127109061050c9084610e3c565b6105169190610e53565b905060006105248284610e75565b90508115610601576004546040516000916001600160a01b03169084908381818185875af1925050503d8060008114610579576040519150601f19603f3d011682016040523d82523d6000602084013e61057e565b606091505b50509050806105c55760405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b604482015260640161039a565b877f61930a6c1553eab59d5766da6e1bab8eba982aec848ae7683452f4a6423b6e4a846040516105f791815260200190565b60405180910390a2505b60ff8416600090815260038701602090815260408083208054825181850281018501909352808352919290919083018282801561066757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610649575b5050835193945060009250610680915083905085610e53565b905060005b828110156107ab5760008482815181106106a1576106a1610e88565b60200260200101516001600160a01b03168360405160006040518083038185875af1925050503d80600081146106f3576040519150601f19603f3d011682016040523d82523d6000602084013e6106f8565b606091505b505090508061073b5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161039a565b8b7fdc1d0b6a7cbfa6f3b2d4325bab5a169b265ad0b2b4022fb550364f0dfeeb6a7486848151811061076f5761076f610e88565b60200260200101518560405161079a9291906001600160a01b03929092168252602082015260400190565b60405180910390a250600101610685565b50897f4d6af155074145d7f49bda5b98f64c1687e86fc9edfd9e4b61e881f558b76ebb88856040516107de929190610e9e565b60405180910390a250506003805460ff191690555050505050505050565b600061038461080c836001610e29565b6108169190610e3c565b6001546108239190610e29565b92915050565b60035461010090046001600160a01b031633146108585760405162461bcd60e51b815260040161039a90610ef9565b6127108111156108995760405162461bcd60e51b815260206004820152600c60248201526b0a8c2f040e8dede40d0d2ced60a31b604482015260640161039a565b600555565b60035461010090046001600160a01b031633146108cd5760405162461bcd60e51b815260040161039a90610ef9565b6001600160a01b0381166109195760405162461bcd60e51b8152602060048201526013602482015272496e76616c696420666565206164647265737360681b604482015260640161039a565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b8361094581610bad565b6109865760405162461bcd60e51b8152602060048201526012602482015271496e76616c69642067616d65206379636c6560701b604482015260640161039a565b60008181526020819052604090206001015460ff16156109df5760405162461bcd60e51b815260206004820152601460248201527311d85b5948185b1c9958591e481cd95d1d1b195960621b604482015260640161039a565b60008581526020818152604080832087845260028101909252909120546001600160a01b03163314610a445760405162461bcd60e51b815260206004820152600e60248201526d4e6f7420796f757220677565737360901b604482015260640161039a565b6040516001600160f81b031960f886901b1660208201526021810184905285906041016040516020818303038152906040528051906020012014610aba5760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b604482015260640161039a565b6000858152600282016020908152604080832080546001600160a01b031990811690915560ff881680855260038601845282852080546001810182559086529484902090940180549091163317905580518881529182019290925290810184905286907fe523509eb25762b0e875ad13e63e1ec972ba60ead197195b14fcad077d85a0d59060600160405180910390a26000610b54610bc0565b9050610b61876002610e29565b8110610b7057610b708761035a565b50505050505050565b60035461010090046001600160a01b03163314610ba85760405162461bcd60e51b815260040161039a90610ef9565b600255565b6000610bb7610bc0565b90911115919050565b600061038460015442610bd39190610e75565b610bdd9190610e53565b905090565b6000610bec610bc0565b6000818152602081905260409020600254919250903414610c4f5760405162461bcd60e51b815260206004820152601e60248201527f4d7573742073656e642065786163746c7920677565737420616d6f756e740000604482015260640161039a565b60008381526002820160205260409020546001600160a01b031615610cab5760405162461bcd60e51b8152602060048201526012602482015271416c7265616479207573656420677565737360701b604482015260640161039a565b8060050154600003610d0f57426005820155610cc6826107fc565b60068201819055600582015460408051918252602082019290925283917fbd3f84a55fdc44f970adc6ccbaa93e78d7da5f3fc37c4b7da578d47c9ad2e46a910160405180910390a25b6000838152600282016020526040812080546001600160a01b03191633179055815434918391610d40908490610e29565b9091555050604080513381526020810185905283917ff18a44d25700f31dcb9a7bd3601cd7a1d5e21d6e1fcd7b995a50d84888bf59a4910160405180910390a2505050565b600060208284031215610d9757600080fd5b5035919050565b600060208284031215610db057600080fd5b81356001600160a01b0381168114610dc757600080fd5b9392505050565b60008060008060808587031215610de457600080fd5b8435935060208501359250604085013560ff81168114610e0357600080fd5b9396929550929360600135925050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561082357610823610e13565b808202811582820484141761082357610823610e13565b600082610e7057634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561082357610823610e13565b634e487b7160e01b600052603260045260246000fd5b60006040820160ff851683526040602084015280845180835260608501915060208601925060005b81811015610eed5783516001600160a01b0316835260209384019390920191600101610ec6565b50909695505050505050565b6020808252600990820152682737ba1037bbb732b960b91b60408201526060019056fea26469706673582212206fc872b8b4b8977741d4c374247f66af0516fab084420595ff45afb368ced97f64736f6c634300081c0033";

type LotteryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LotteryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lottery__factory extends ContractFactory {
  constructor(...args: LotteryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _feeAddress: AddressLike,
    _taxPercent: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _feeAddress,
      _taxPercent,
      overrides || {}
    );
  }
  override deploy(
    _feeAddress: AddressLike,
    _taxPercent: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_feeAddress, _taxPercent, overrides || {}) as Promise<
      Lottery & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Lottery__factory {
    return super.connect(runner) as Lottery__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryInterface {
    return new Interface(_abi) as LotteryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Lottery {
    return new Contract(address, _abi, runner) as unknown as Lottery;
  }
}
