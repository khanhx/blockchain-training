/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Lock, LockInterface } from "../Lock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unlockTime",
        type: "uint256",
      },
    ],
    name: "TokenLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenUnlocked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getLockInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unlockTime",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isUnlocked",
            type: "bool",
          },
        ],
        internalType: "struct Lock.LockInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minutes",
        type: "uint256",
      },
    ],
    name: "lockTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506105de8061001f6000396000f3fe6080604052600436106100345760003560e01c80636198e339146100395780636e27d8891461005b578063c9102afd1461006e575b600080fd5b34801561004557600080fd5b50610059610054366004610530565b610148565b005b610059610069366004610530565b61039a565b34801561007a57600080fd5b50610101610089366004610530565b604080516080810182526000808252602082018190529181018290526060810191909152506000908152600160208181526040928390208351608081018552815481529281015491830191909152600201546001600160a01b03811692820192909252600160a01b90910460ff161515606082015290565b60405161013f919081518152602080830151908201526040808301516001600160a01b03169082015260609182015115159181019190915260800190565b60405180910390f35b6000818152600160205260409020805461019c5760405162461bcd60e51b815260206004820152601060248201526f139bc81d1bdad95b9cc81b1bd8dad95960821b60448201526064015b60405180910390fd5b80600101544210156101f05760405162461bcd60e51b815260206004820152601760248201527f546f6b656e7320617265207374696c6c206c6f636b65640000000000000000006044820152606401610193565b60028101546001600160a01b031633146102575760405162461bcd60e51b815260206004820152602260248201527f596f7520617265206e6f7420746865206f776e6572206f662074686973206c6f604482015261636b60f01b6064820152608401610193565b6002810154600160a01b900460ff16156102b35760405162461bcd60e51b815260206004820152601b60248201527f546f6b656e732061726520616c726561647920756e6c6f636b656400000000006044820152606401610193565b805460405160009133918381818185875af1925050503d80600081146102f5576040519150601f19603f3d011682016040523d82523d6000602084013e6102fa565b606091505b505090508061033d5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610193565b60028201805460ff60a01b1916600160a01b179055815460405133917f6257d77b7eaf282a68ca9b51c3de34795eeba4216930c28d45a255c3cec8f4139161038d91878252602082015260400190565b60405180910390a2505050565b600081116103fd5760405162461bcd60e51b815260206004820152602a60248201527f4c6f636b20706572696f64206d7573742062652067726561746572207468616e6044820152692030206d696e7574657360b01b6064820152608401610193565b600034116104455760405162461bcd60e51b81526020600482015260156024820152744d757374206c6f636b20736f6d6520746f6b656e7360581b6044820152606401610193565b600061045282603c61055f565b90506000610460824261057c565b6040805160808101825234808252602080830185815233848601818152600060608088018281528254835260018088528a842099518a5595519589019590955591516002909701805494511515600160a01b026001600160a81b03199095166001600160a01b03909816979097179390931790955590548551908152918201929092529283018490529293507f79477b88de797e1633f0b8b1d970d4df75bd4b2584797def161f29ab667d3a77910160405180910390a26000805490806105268361058f565b9190505550505050565b60006020828403121561054257600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761057657610576610549565b92915050565b8082018082111561057657610576610549565b6000600182016105a1576105a1610549565b506001019056fea2646970667358221220435e87dd4415f9ba28eab49ef329c49f66f155a48d8b482da061681c032082c364736f6c634300081c0033";

type LockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lock__factory extends ContractFactory {
  constructor(...args: LockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Lock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Lock__factory {
    return super.connect(runner) as Lock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LockInterface {
    return new Interface(_abi) as LockInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Lock {
    return new Contract(address, _abi, runner) as unknown as Lock;
  }
}
