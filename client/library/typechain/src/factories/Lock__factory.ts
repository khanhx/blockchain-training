/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Lock, LockInterface } from "../Lock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unlockTime",
        type: "uint256",
      },
    ],
    name: "TokenLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenUnlocked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getLockInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unlockTime",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isUnlocked",
            type: "bool",
          },
        ],
        internalType: "struct Lock.LockInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minutes",
        type: "uint256",
      },
    ],
    name: "lockTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061060e8061001f6000396000f3fe6080604052600436106100345760003560e01c80636198e339146100395780636e27d8891461005b578063c9102afd1461006e575b600080fd5b34801561004557600080fd5b50610059610054366004610560565b610148565b005b610059610069366004610560565b6103be565b34801561007a57600080fd5b50610101610089366004610560565b604080516080810182526000808252602082018190529181018290526060810191909152506000908152600160208181526040928390208351608081018552815481529281015491830191909152600201546001600160a01b03811692820192909252600160a01b90910460ff161515606082015290565b60405161013f919081518152602080830151908201526040808301516001600160a01b03169082015260609182015115159181019190915260800190565b60405180910390f35b600081815260016020818152604092839020835160808101855281548082529382015492810192909252600201546001600160a01b03811693820193909352600160a01b90920460ff16151560608301526101dd5760405162461bcd60e51b815260206004820152601060248201526f139bc81d1bdad95b9cc81b1bd8dad95960821b60448201526064015b60405180910390fd5b80602001514210156102315760405162461bcd60e51b815260206004820152601760248201527f546f6b656e7320617265207374696c6c206c6f636b656400000000000000000060448201526064016101d4565b60408101516001600160a01b031633146102985760405162461bcd60e51b815260206004820152602260248201527f596f7520617265206e6f7420746865206f776e6572206f662074686973206c6f604482015261636b60f01b60648201526084016101d4565b6060810151156102ea5760405162461bcd60e51b815260206004820152601b60248201527f546f6b656e732061726520616c726561647920756e6c6f636b6564000000000060448201526064016101d4565b805160016060830152604051600090339083908381818185875af1925050503d8060008114610335576040519150601f19603f3d011682016040523d82523d6000602084013e61033a565b606091505b505090508061037d5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064016101d4565b604080518581526020810184905233917f6257d77b7eaf282a68ca9b51c3de34795eeba4216930c28d45a255c3cec8f413910160405180910390a250505050565b600081116104215760405162461bcd60e51b815260206004820152602a60248201527f4c6f636b20706572696f64206d7573742062652067726561746572207468616e6044820152692030206d696e7574657360b01b60648201526084016101d4565b600034116104695760405162461bcd60e51b81526020600482015260156024820152744d757374206c6f636b20736f6d6520746f6b656e7360581b60448201526064016101d4565b600061047682603c61058f565b9050600061048482426105ac565b6000805491925080610495836105bf565b909155505060408051608081018252348082526020808301858152338486018181526000606087018181528154825260019586905288822097518855935194870194909455516002909501805492511515600160a01b026001600160a81b03199093166001600160a01b0396909616959095179190911790935554925191927f79477b88de797e1633f0b8b1d970d4df75bd4b2584797def161f29ab667d3a7792610553929086909283526020830191909152604082015260600190565b60405180910390a2505050565b60006020828403121561057257600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176105a6576105a6610579565b92915050565b808201808211156105a6576105a6610579565b6000600182016105d1576105d1610579565b506001019056fea264697066735822122097d634eebdb32c8eba462de3298c9cab02d3df5e26057b3bd72b9d873cbb9fe564736f6c634300081c0033";

type LockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lock__factory extends ContractFactory {
  constructor(...args: LockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Lock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Lock__factory {
    return super.connect(runner) as Lock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LockInterface {
    return new Interface(_abi) as LockInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Lock {
    return new Contract(address, _abi, runner) as unknown as Lock;
  }
}
