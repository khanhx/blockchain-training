/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { NFT, NFTInterface } from "../../contracts/NFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336040518060400160405280600881526020016715195cdd0813919560c21b815250604051806040016040528060048152602001631513919560e21b815250816000908161005f919061019d565b50600161006c828261019d565b5050506001600160a01b03811661009d57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100a6816100ac565b5061025b565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061012857607f821691505b60208210810361014857634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561019857806000526020600020601f840160051c810160208510156101755750805b601f840160051c820191505b818110156101955760008155600101610181565b50505b505050565b81516001600160401b038111156101b6576101b66100fe565b6101ca816101c48454610114565b8461014e565b6020601f8211600181146101fe57600083156101e65750848201515b600019600385901b1c1916600184901b178455610195565b600084815260208120601f198516915b8281101561022e578785015182556020948501946001909201910161020e565b508482101561024c5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6110a98061026a6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a2578063a22cb46511610071578063a22cb4651461021b578063b88d4fde1461022e578063c87b56dd14610241578063e985e9c514610254578063f2fde38b1461026757600080fd5b806370a08231146101d9578063715018a6146101fa5780638da5cb5b1461020257806395d89b411461021357600080fd5b806323b872dd116100de57806323b872dd1461018d57806340c10f19146101a057806342842e0e146101b35780636352211e146101c657600080fd5b806301ffc9a71461011057806306fdde0314610138578063081812fc1461014d578063095ea7b314610178575b600080fd5b61012361011e366004610d10565b61027a565b60405190151581526020015b60405180910390f35b6101406102cc565b60405161012f9190610d7d565b61016061015b366004610d90565b61035e565b6040516001600160a01b03909116815260200161012f565b61018b610186366004610dc5565b610387565b005b61018b61019b366004610def565b610396565b61018b6101ae366004610dc5565b610426565b61018b6101c1366004610def565b610438565b6101606101d4366004610d90565b610458565b6101ec6101e7366004610e2c565b610463565b60405190815260200161012f565b61018b6104ab565b6006546001600160a01b0316610160565b6101406104bf565b61018b610229366004610e47565b6104ce565b61018b61023c366004610e99565b6104d9565b61014061024f366004610d90565b6104f1565b610123610262366004610f7d565b610566565b61018b610275366004610e2c565b610594565b60006001600160e01b031982166380ac58cd60e01b14806102ab57506001600160e01b03198216635b5e139f60e01b145b806102c657506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102db90610fb0565b80601f016020809104026020016040519081016040528092919081815260200182805461030790610fb0565b80156103545780601f1061032957610100808354040283529160200191610354565b820191906000526020600020905b81548152906001019060200180831161033757829003601f168201915b5050505050905090565b6000610369826105d2565b506000828152600460205260409020546001600160a01b03166102c6565b61039282823361060b565b5050565b6001600160a01b0382166103c557604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006103d2838333610618565b9050836001600160a01b0316816001600160a01b031614610420576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016103bc565b50505050565b61042e610711565b610392828261073e565b610453838383604051806020016040528060008152506104d9565b505050565b60006102c6826105d2565b60006001600160a01b03821661048f576040516322718ad960e21b8152600060048201526024016103bc565b506001600160a01b031660009081526003602052604090205490565b6104b3610711565b6104bd60006107a3565b565b6060600180546102db90610fb0565b6103923383836107f5565b6104e4848484610396565b6104203385858585610894565b60606104fc826105d2565b50600061051460408051602081019091526000815290565b90506000815111610534576040518060200160405280600081525061055f565b8061053e846109bf565b60405160200161054f929190610fea565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61059c610711565b6001600160a01b0381166105c657604051631e4fbdf760e01b8152600060048201526024016103bc565b6105cf816107a3565b50565b6000818152600260205260408120546001600160a01b0316806102c657604051637e27328960e01b8152600481018490526024016103bc565b6104538383836001610a52565b6000828152600260205260408120546001600160a01b039081169083161561064557610645818486610b58565b6001600160a01b0381161561068357610662600085600080610a52565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b038516156106b2576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6006546001600160a01b031633146104bd5760405163118cdaa760e01b81523360048201526024016103bc565b6001600160a01b03821661076857604051633250574960e11b8152600060048201526024016103bc565b600061077683836000610618565b90506001600160a01b03811615610453576040516339e3563760e11b8152600060048201526024016103bc565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661082757604051630b61174360e31b81526001600160a01b03831660048201526024016103bc565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b156109b857604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906108d6908890889087908790600401611019565b6020604051808303816000875af1925050508015610911575060408051601f3d908101601f1916820190925261090e91810190611056565b60015b61097a573d80801561093f576040519150601f19603f3d011682016040523d82523d6000602084013e610944565b606091505b50805160000361097257604051633250574960e11b81526001600160a01b03851660048201526024016103bc565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146109b657604051633250574960e11b81526001600160a01b03851660048201526024016103bc565b505b5050505050565b606060006109cc83610bbc565b600101905060008167ffffffffffffffff8111156109ec576109ec610e83565b6040519080825280601f01601f191660200182016040528015610a16576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610a2057509392505050565b8080610a6657506001600160a01b03821615155b15610b28576000610a76846105d2565b90506001600160a01b03831615801590610aa25750826001600160a01b0316816001600160a01b031614155b8015610ab55750610ab38184610566565b155b15610ade5760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016103bc565b8115610b265783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610b63838383610c94565b610453576001600160a01b038316610b9157604051637e27328960e01b8152600481018290526024016103bc565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016103bc565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610bfb5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610c27576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610c4557662386f26fc10000830492506010015b6305f5e1008310610c5d576305f5e100830492506008015b6127108310610c7157612710830492506004015b60648310610c83576064830492506002015b600a83106102c65760010192915050565b60006001600160a01b03831615801590610cf25750826001600160a01b0316846001600160a01b03161480610cce5750610cce8484610566565b80610cf257506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160e01b0319811681146105cf57600080fd5b600060208284031215610d2257600080fd5b813561055f81610cfa565b60005b83811015610d48578181015183820152602001610d30565b50506000910152565b60008151808452610d69816020860160208601610d2d565b601f01601f19169290920160200192915050565b60208152600061055f6020830184610d51565b600060208284031215610da257600080fd5b5035919050565b80356001600160a01b0381168114610dc057600080fd5b919050565b60008060408385031215610dd857600080fd5b610de183610da9565b946020939093013593505050565b600080600060608486031215610e0457600080fd5b610e0d84610da9565b9250610e1b60208501610da9565b929592945050506040919091013590565b600060208284031215610e3e57600080fd5b61055f82610da9565b60008060408385031215610e5a57600080fd5b610e6383610da9565b915060208301358015158114610e7857600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610eaf57600080fd5b610eb885610da9565b9350610ec660208601610da9565b925060408501359150606085013567ffffffffffffffff811115610ee957600080fd5b8501601f81018713610efa57600080fd5b803567ffffffffffffffff811115610f1457610f14610e83565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610f4357610f43610e83565b604052818152828201602001891015610f5b57600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b60008060408385031215610f9057600080fd5b610f9983610da9565b9150610fa760208401610da9565b90509250929050565b600181811c90821680610fc457607f821691505b602082108103610fe457634e487b7160e01b600052602260045260246000fd5b50919050565b60008351610ffc818460208801610d2d565b835190830190611010818360208801610d2d565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061104c90830184610d51565b9695505050505050565b60006020828403121561106857600080fd5b815161055f81610cfa56fea2646970667358221220bb332fb96cc2b33bf4c1811725bd73a5013c3bf9d726573d856ee8abc4a2426964736f6c634300081c0033";

type NFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFT__factory extends ContractFactory {
  constructor(...args: NFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      NFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NFT__factory {
    return super.connect(runner) as NFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTInterface {
    return new Interface(_abi) as NFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): NFT {
    return new Contract(address, _abi, runner) as unknown as NFT;
  }
}
