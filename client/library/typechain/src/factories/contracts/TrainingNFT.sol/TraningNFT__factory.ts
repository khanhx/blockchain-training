/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TraningNFT,
  TraningNFTInterface,
} from "../../../contracts/TrainingNFT.sol/TraningNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC721EnumerableForbiddenBatchMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "ERC721OutOfBoundsIndex",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161177538038061177583398101604081905261002f9161011d565b806040518060400160405280600a815260200169151c985b9a5b99d3919560b21b815250604051806040016040528060028152602001612a2760f11b815250816000908161007d91906101ec565b50600161008a82826101ec565b5050506001600160a01b0381166100bb57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100c4816100cb565b50506102aa565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006020828403121561012f57600080fd5b81516001600160a01b038116811461014657600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061017757607f821691505b60208210810361019757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101e757806000526020600020601f840160051c810160208510156101c45750805b601f840160051c820191505b818110156101e457600081556001016101d0565b50505b505050565b81516001600160401b038111156102055761020561014d565b610219816102138454610163565b8461019d565b6020601f82116001811461024d57600083156102355750848201515b600019600385901b1c1916600184901b1784556101e4565b600084815260208120601f198516915b8281101561027d578785015182556020948501946001909201910161025d565b508482101561029b5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6114bc806102b96000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad578063a22cb46511610071578063a22cb46514610266578063b88d4fde14610279578063c87b56dd1461028c578063e985e9c51461029f578063f2fde38b146102b257600080fd5b806370a082311461021f578063715018a6146102325780638da5cb5b1461023a57806395d89b411461024b578063a14481941461025357600080fd5b806323b872dd116100f457806323b872dd146101c05780632f745c59146101d357806342842e0e146101e65780634f6ccce7146101f95780636352211e1461020c57600080fd5b806301ffc9a71461013157806306fdde0314610159578063081812fc1461016e578063095ea7b31461019957806318160ddd146101ae575b600080fd5b61014461013f3660046110d6565b6102c5565b60405190151581526020015b60405180910390f35b6101616102d6565b6040516101509190611143565b61018161017c366004611156565b610368565b6040516001600160a01b039091168152602001610150565b6101ac6101a736600461118b565b610391565b005b6008545b604051908152602001610150565b6101ac6101ce3660046111b5565b6103a0565b6101b26101e136600461118b565b610430565b6101ac6101f43660046111b5565b610495565b6101b2610207366004611156565b6104b5565b61018161021a366004611156565b61050e565b6101b261022d3660046111f2565b610519565b6101ac610561565b600a546001600160a01b0316610181565b610161610575565b6101ac61026136600461118b565b610584565b6101ac61027436600461120d565b61058e565b6101ac61028736600461125f565b610599565b61016161029a366004611156565b6105b1565b6101446102ad366004611343565b610626565b6101ac6102c03660046111f2565b610654565b60006102d082610692565b92915050565b6060600080546102e590611376565b80601f016020809104026020016040519081016040528092919081815260200182805461031190611376565b801561035e5780601f106103335761010080835404028352916020019161035e565b820191906000526020600020905b81548152906001019060200180831161034157829003601f168201915b5050505050905090565b6000610373826106b7565b506000828152600460205260409020546001600160a01b03166102d0565b61039c8282336106f0565b5050565b6001600160a01b0382166103cf57604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006103dc8383336106fd565b9050836001600160a01b0316816001600160a01b03161461042a576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016103c6565b50505050565b600061043b83610519565b821061046c5760405163295f44f760e21b81526001600160a01b0384166004820152602481018390526044016103c6565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6104b083838360405180602001604052806000815250610599565b505050565b60006104c060085490565b82106104e95760405163295f44f760e21b815260006004820152602481018390526044016103c6565b600882815481106104fc576104fc6113b0565b90600052602060002001549050919050565b60006102d0826106b7565b60006001600160a01b038216610545576040516322718ad960e21b8152600060048201526024016103c6565b506001600160a01b031660009081526003602052604090205490565b610569610712565b610573600061073f565b565b6060600180546102e590611376565b61039c8282610791565b61039c3383836107ab565b6105a48484846103a0565b61042a338585858561084a565b60606105bc826106b7565b5060006105d460408051602081019091526000815290565b905060008151116105f4576040518060200160405280600081525061061f565b806105fe84610975565b60405160200161060f9291906113c6565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61065c610712565b6001600160a01b03811661068657604051631e4fbdf760e01b8152600060048201526024016103c6565b61068f8161073f565b50565b60006001600160e01b0319821663780e9d6360e01b14806102d057506102d082610a08565b6000818152600260205260408120546001600160a01b0316806102d057604051637e27328960e01b8152600481018490526024016103c6565b6104b08383836001610a58565b600061070a848484610b5e565b949350505050565b600a546001600160a01b031633146105735760405163118cdaa760e01b81523360048201526024016103c6565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61039c828260405180602001604052806000815250610c2b565b6001600160a01b0382166107dd57604051630b61174360e31b81526001600160a01b03831660048201526024016103c6565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561096e57604051630a85bd0160e11b81526001600160a01b0384169063150b7a029061088c9088908890879087906004016113f5565b6020604051808303816000875af19250505080156108c7575060408051601f3d908101601f191682019092526108c491810190611432565b60015b610930573d8080156108f5576040519150601f19603f3d011682016040523d82523d6000602084013e6108fa565b606091505b50805160000361092857604051633250574960e11b81526001600160a01b03851660048201526024016103c6565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461096c57604051633250574960e11b81526001600160a01b03851660048201526024016103c6565b505b5050505050565b6060600061098283610c43565b600101905060008167ffffffffffffffff8111156109a2576109a2611249565b6040519080825280601f01601f1916602001820160405280156109cc576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846109d657509392505050565b60006001600160e01b031982166380ac58cd60e01b1480610a3957506001600160e01b03198216635b5e139f60e01b145b806102d057506301ffc9a760e01b6001600160e01b03198316146102d0565b8080610a6c57506001600160a01b03821615155b15610b2e576000610a7c846106b7565b90506001600160a01b03831615801590610aa85750826001600160a01b0316816001600160a01b031614155b8015610abb5750610ab98184610626565b155b15610ae45760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016103c6565b8115610b2c5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b600080610b6c858585610d1b565b90506001600160a01b038116610bc957610bc484600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b610bec565b846001600160a01b0316816001600160a01b031614610bec57610bec8185610e14565b6001600160a01b038516610c0857610c0384610e95565b61070a565b846001600160a01b0316816001600160a01b03161461070a5761070a8585610f44565b610c358383610f94565b6104b033600085858561084a565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610c825772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610cae576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610ccc57662386f26fc10000830492506010015b6305f5e1008310610ce4576305f5e100830492506008015b6127108310610cf857612710830492506004015b60648310610d0a576064830492506002015b600a83106102d05760010192915050565b6000828152600260205260408120546001600160a01b0390811690831615610d4857610d48818486610ff9565b6001600160a01b03811615610d8657610d65600085600080610a58565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610db5576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6000610e1f83610519565b6000838152600760209081526040808320546001600160a01b0388168452600690925290912091925090818314610e7657600083815260208281526040808320548584528184208190558352600790915290208290555b6000938452600760209081526040808620869055938552525081205550565b600854600090610ea79060019061144f565b60008381526009602052604081205460088054939450909284908110610ecf57610ecf6113b0565b906000526020600020015490508060088381548110610ef057610ef06113b0565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480610f2857610f28611470565b6001900381819060005260206000200160009055905550505050565b60006001610f5184610519565b610f5b919061144f565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b038216610fbe57604051633250574960e11b8152600060048201526024016103c6565b6000610fcc838360006106fd565b90506001600160a01b038116156104b0576040516339e3563760e11b8152600060048201526024016103c6565b61100483838361105d565b6104b0576001600160a01b03831661103257604051637e27328960e01b8152600481018290526024016103c6565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016103c6565b60006001600160a01b0383161580159061070a5750826001600160a01b0316846001600160a01b0316148061109757506110978484610626565b8061070a5750506000908152600460205260409020546001600160a01b03908116911614919050565b6001600160e01b03198116811461068f57600080fd5b6000602082840312156110e857600080fd5b813561061f816110c0565b60005b8381101561110e5781810151838201526020016110f6565b50506000910152565b6000815180845261112f8160208601602086016110f3565b601f01601f19169290920160200192915050565b60208152600061061f6020830184611117565b60006020828403121561116857600080fd5b5035919050565b80356001600160a01b038116811461118657600080fd5b919050565b6000806040838503121561119e57600080fd5b6111a78361116f565b946020939093013593505050565b6000806000606084860312156111ca57600080fd5b6111d38461116f565b92506111e16020850161116f565b929592945050506040919091013590565b60006020828403121561120457600080fd5b61061f8261116f565b6000806040838503121561122057600080fd5b6112298361116f565b91506020830135801515811461123e57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561127557600080fd5b61127e8561116f565b935061128c6020860161116f565b925060408501359150606085013567ffffffffffffffff8111156112af57600080fd5b8501601f810187136112c057600080fd5b803567ffffffffffffffff8111156112da576112da611249565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561130957611309611249565b60405281815282820160200189101561132157600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b6000806040838503121561135657600080fd5b61135f8361116f565b915061136d6020840161116f565b90509250929050565b600181811c9082168061138a57607f821691505b6020821081036113aa57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600083516113d88184602088016110f3565b8351908301906113ec8183602088016110f3565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061142890830184611117565b9695505050505050565b60006020828403121561144457600080fd5b815161061f816110c0565b818103818111156102d057634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fdfea2646970667358221220d09c7f4cf4e502e8f392d4d0d87039d5de40a921a9ae541f201f26bcc8d71e6e64736f6c634300081c0033";

type TraningNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TraningNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TraningNFT__factory extends ContractFactory {
  constructor(...args: TraningNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      TraningNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TraningNFT__factory {
    return super.connect(runner) as TraningNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TraningNFTInterface {
    return new Interface(_abi) as TraningNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TraningNFT {
    return new Contract(address, _abi, runner) as unknown as TraningNFT;
  }
}
