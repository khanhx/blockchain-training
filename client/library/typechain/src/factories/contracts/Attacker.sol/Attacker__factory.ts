/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Attacker,
  AttackerInterface,
} from "../../../contracts/Attacker.sol/Attacker";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minutes",
        type: "uint256",
      },
    ],
    name: "lockTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060405161029b38038061029b833981016040819052602c916050565b600080546001600160a01b0319166001600160a01b0392909216919091179055607e565b600060208284031215606157600080fd5b81516001600160a01b0381168114607757600080fd5b9392505050565b61020e8061008d6000396000f3fe60806040526004361061002d5760003560e01c80635bfadb24146100b75780636e27d889146100d757600080fd5b366100b2576002546000546001600160a01b03163111156100b057600054600154604051636198e33960e01b81526001600160a01b0390921691636198e3399161007d9160040190815260200190565b600060405180830381600087803b15801561009757600080fd5b505af11580156100ab573d6000803e3d6000fd5b505050505b005b600080fd5b3480156100c357600080fd5b506100b06100d236600461019d565b6100ea565b6100b06100e53660046101bf565b610156565b60028190556001829055600054604051636198e33960e01b8152600481018490526001600160a01b0390911690636198e33990602401600060405180830381600087803b15801561013a57600080fd5b505af115801561014e573d6000803e3d6000fd5b505050505050565b600054604051636e27d88960e01b8152600481018390526001600160a01b0390911690636e27d8899034906024016000604051808303818588803b15801561013a57600080fd5b600080604083850312156101b057600080fd5b50508035926020909101359150565b6000602082840312156101d157600080fd5b503591905056fea26469706673582212202e082f5cea8534691b49be2e70cdca1108a7a871649b06e3bd734477003b9b4f64736f6c634300081c0033";

type AttackerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AttackerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Attacker__factory extends ContractFactory {
  constructor(...args: AttackerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _target: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_target, overrides || {});
  }
  override deploy(
    _target: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_target, overrides || {}) as Promise<
      Attacker & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Attacker__factory {
    return super.connect(runner) as Attacker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttackerInterface {
    return new Interface(_abi) as AttackerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Attacker {
    return new Contract(address, _abi, runner) as unknown as Attacker;
  }
}
